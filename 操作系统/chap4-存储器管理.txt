第4章  存储器管理
1	存储器管理的功能。名字空间、地址空间、存储空间、逻辑地址、物理地址。
功能：
（1）存储器分配：解决多道程序或多进程共享主存的问题
（2）地址转换或重定位：研究各种地址变换方法及相应的地址变换机构。
（3）存储器保护：防止故障程序破坏OS和其它信息
（4）存储器扩充：采用多级存储技术实现虚拟存储器及所用的各种管理算法。
（5）存储器共享：并发执行的进程如何共享主存中的程序和数据。
符号名字空间：源程序中的各种符号名的集合所限定的空间。如源程序中的数据和子程序通常是用符号名进行访问的。
逻辑地址空间：经编译连接后的目标代码所限定的空间。用地址码替换符号地址。相对地址，逻辑地址，虚地址。
存储空间：物理存储器中全部物理存储单元的集合所限定的空间。绝对地址，物理地址，实地址。
2	什么是地址重定位?分为哪两种?各是依据什么和什么时候实现的?试比较它们的优缺点。
地址重定位：把程序地址空间的逻辑地址转换为存储空间的物理地址。分为静态重定位和动态重定位。
静态：在进程执行前，由装入程序把用户程序中的指令和数据的逻辑地址全部转换成存储空间的物理地址。
特点：1）无硬件变换机构；2）为每个程序分配一个连续的存储区；3）在程序执行期间不能移动，主存利用率低；4）难以做到程序和数据的共享；5）用于单道批处理系统。
动态：装入程序把程序和数据原样装入到已分配的存储区中。程序运行时，把该存储区的起始地址送入重定位寄存器。需硬件地址转换机构。多道批处理系统、分时系统
优点：1）主存利用充分。可移动用户程序。移动后，只需修改重定位寄存器。2）程序不必占有连续的存储空间。 3）便于多用户共享存储器中的同一程序和数据
3	内存划分为两大部分：用户空间和操作系统空间。存储器管理是针对用户空间进行管理的。
通常存储器划分为两部分：操作系统占用区和用户进程占用区（或用户区）。存储器管理是指对用户区的管理。
4	存储保护的目的是什么?对各种存储管理方案实现存储保护时，硬件和软件各需做什么工作?
防止地址越界：进程运行时产生的所有存储器访问地址都要进行检查，确保只访问为该进程分配的存储区域。
正确地进行存取：对所访问的存储空间的操作方式（读、写、执行）进行检查，以防止由于误操作，使其数据的完整性受到破坏。
5	试述可变式分区管理空闲区的方法及存储器的保护方式。覆盖与交换有什么特点？
根据作业的大小动态地划分分区，使分区的大小正好等于作业大小。各分区的大小是不定的；内存中分区的数目也是不定的。
（1）首次适应(first fit)法：要求空闲区表或空闲区链中的空闲区按地址从小到大排列。分配内存时，从起始地址最小的空闲区开始扫描，直到找到一个能满足其大小要求的空闲区为止。分一块给请求者，余下部分仍留在其中。
（2）最佳适应(best fit)法：存储分配程序要扫描所有空闲区，直到找到能满足进程需求且为最小的空闲区为止。
缺点：因为要查找所有的分区，所以比首次适应算法效率低。可能把主存划分得更小，出现很多无用的碎片。
改进：从小到大对空闲区排序。
（3）最坏适应(worst fit)法：要扫描所有的空闲区，直到找到满足进程要求且为最大的空闲区为止。一分为二，一部分分给进程，另一部分仍留在链表中。目的：使剩下的空闲区可用。
缺点：要扫描所有的空闲区；大空闲区的不断分割，可能满足不了大进程的要求。
改进：从大到小对空闲区排序，以提高查找速度。

地址重定位和存储器保护：
（1）	固定分区采用静态重定位，进程运行时使用主存物理地址 设置上、下界寄存器来实现存储器保护
（2）	可变式分区采用动态重定位，进程运行时CPU给出逻辑地址，设置基址+限长寄存器实现存储器保护

分区管理的优缺点：
优点：多进程共享主存、系统设计简单、存储器保护简单
缺点：有碎片，主存利用不充分；主存不扩充。

覆盖和交换技术
覆盖：是指同一主存区可以被不同的程序段重复使用。通常一个进程由若干个功能上相互独立的程序段组成，进程在一次运行时，也只用到其中的几段。让那些不会同时执行的程序段共用同一个主存区。覆盖段和覆盖区一一对应，系统提供覆盖管理程序，用户覆盖结构。
特点：打破了必须将一个进程的全部信息装入主存后才能运行的限制。在逻辑上扩充了主存。小主存可运行大进程。
交换：系统根据需要把主存中暂时不运行的进程中的部分或全部信息移到外存，而把外存中的进程移到主存，并使其投入运行。
时机：时间片用完或者进程要求扩充其占用的存储区而得不到满足
通常把外存分为文件区和交换区（存放从内存换出的进程）。交换主要是在进程之间进行，而覆盖则主要在同一个进程内进行。
交换技术的关键：设法减少每次交换的信息量，通常将进程的副本保留在外存，每次换出时，只需要换出修改过的信息。
特点：打破了一个程序一旦进入主存，便一直运行到结束的限制，使得小容量主存也可以运行多个进程，也可以使得各用户进程，在有限的时间内得到响应。
缺点：交换技术也是利用外存来逻辑的扩充主存，进程的大小也会受到实际主存容量的限制。
6	页表的作用是什么?简述页式管理的地址变换过程。能利用页表实现逻辑地址转换成物理地址。管理内存的数据结构有哪些？（存储方式，哪种存储器效率最高）
页表：系统为每个进程建立一张页面映像表，记录逻辑页与主存块的映射关系。
快表和联想存储器
管理内存的数据结构有两种：存储分块表，位示图；
7	什么是页式存储器的内零头?与页的大小有什么关系?可变式分区管理产生什么样的零头？
在等长固定分区中，进程装入一个分区后，若这个分区还有没用的部分，则这个部分叫做内零头
可变分区时,可能会形成大量较小的，难以再分配的分区这样分区叫外零头
8	段式存储器管理与页式管理的主要区别是什么?
(1)段是由用户划分的；页是为了方便管理由硬件划分的，对用户是透明的。
(2)页的大小固定；段的大小不固定。
(3)段式用二维地址空间；页式用一维地址空间。
(4)段允许动态扩充，便于存储保护和信息共享（各进程的段表项指向共享段的物理地址）。
(5)段可能产生主存碎片；页消除了碎片。
(6)段式管理便于实现动态链接，页式管理只能进行静态链接。  
(7)段与页一样，实现地址变换开销大，表格多。
9	什么是虚拟存储器。虚拟存储器的容量能大于主存容量加辅存容量之和吗?
虚拟存储器：是系统为了满足应用对存储器容量的巨大需求而构造的一个非常大的地址空间。
其容量由计算机的地址结构确定。系统的指令地址部分能覆盖的地址域大于实际主存的容量。
物质基础：有一个大的CPU地址结构；采用多级存储结构；地址转换结构MMU
实现过程：原理+取页置页置换
10	实现请求页式管理，需要对页表进行修改，一般要增加状态位、修改位。试说明它们的作用。
(1) 有效位（状态位）：用来指示某页是否在主存。为1表示该页在主存，完成正常的地址变换；为0表示该页不在主存，由硬件发出一个缺页中断，转操作系统进行缺页处理。
(2) 修改位：指示该页调入主存后是否被修改过。“1”表示修改过，“0”表示未修改过。
(3) 访问位（引用位）：指示该页最近是否被访问过，“1”表示最近访问过，“0”表示最近未访问。
11	产生缺页中断时，系统应做哪些工作? 
1）根据当前指令的逻辑地址查页表的状态位。
2）状态位为0，缺页中断。
3）操作系统处理缺页中断，寻找一个空闲的页框。
4）若有空闲页，则把从磁盘读入信息装入该页框。
5）若无空闲页，则按某种算法选择一个已在内存的页面，暂时调出内存。若修改过还要写磁盘。调入需要的页。之后要修改相应的页表和内存分配表。
6）恢复现场，重新执行被中断的指令。
12	会利用FIFO、LRU、OPT以及时钟页面置换算法描述页面置换过程，计算产生的缺页率。Belady异常、抖动现象。（习题）
(1) 最佳置换算法（OPT）：选择以后不再访问的页或经很长时间之后才可能访问的页进行淘汰。（无法实现）
(2) 先进先出置换算法(FIFO)：当淘汰一页时，选择在主存驻留时间最长的那一页。（抖动、Balady异常）
(3) 最近最少使用的页面置换算法(LRU)：淘汰那些在最近一段时间里最少使用的一页。（复杂）
(4) 时钟页面置换算法：第二次机会算法。淘汰时，检查指针所指页。若引用位为0，则用新页置换之，指针向前走一个位置。若引用位为1，清0，指针前进，直到找到引用位为0的页。
13	什么是程序的局部性原理？什么叫系统抖动?工作集模型如何防止系统抖动?
时间局部性：程序中往往含有许多循环，在一段时间内会重复执行该部分。
空间局部性：程序中含有许多分支，在一次执行中，只有满足条件的代码运行，不满足条件的代码不运行。即使顺序执行程序，程序的地址域在短时间内变化不大。在进程运行过程中，用到哪部分程序或数据再由系统自动装入。
抖动(thrashing)现象：刚被淘汰的页面马上又要用，因而又要把它调入。调入不久再被淘汰，淘汰不久再次装入。如此频繁地调入调出，降低了系统的处理效率。
工作集模型法：设法记录每个进程的工作集，并确保在进程运行前将工作集调入主存，以大大减少进程的缺页率。

页式管理中应该考虑的问题：
1.	交换区的管理
2.	页尺寸
3.	页的共享：共享页锁在内存
4.	多级页表的结构
5.	写时复制技术（copy-on-Write）

14	多级页表的概念，多级页表中页表建立的时机。写时复制技术的概念。
多级页表结构：页表在内存不必连续存放。页表的建立不再是在进程装入主存时，而是推迟到要访问页时，才为包含该页的页表分配空间和建立页表页
二级页表：页目录索引（页目录表），页表索引（页表），页内字节索引（物理主存）
写时复制的页面保护：若没有进程向共享主存页写时，两个进程就共享之。若有进程要写某页，系统就把此页复制到主存的另一个页框中，并更新该进程的页表，使之指向此复制的页框，且设置该页为可读/写。所有未修改的页父子进程共享，子进程独享被复制的页。
15	页的共享问题。需要一个专门数据结构来记录进程间共享页。（重要）
把共享页锁在内存，且在页表中增加引用计数项，仅当其引用计数为0时，才允许调出或释放盘空间。

段的动态链接和共享
