第2-3章  进程管理
1	程序顺序执行的特点
程序的顺序（串行）执行：计算机每次只运行一道程序。如单道批处理系统。
封闭性：程序在运行时独占全机资源，因此，这些资源的状态只能由该程序决定和改变，不受外界因素影响。
可再现性：只要初始条件相同，无论程序连续运行，还是断断续续地运行，程序的执行结果不变。
优点： 由于顺序程序的封闭性和可再现性，为程序员调试程序带来了很大方便。
缺点： 由于资源的独占性，使得系统资源利用率非常低。
2	何谓进程，进程由哪些部分组成？试述进程的四大特性及进程和程序的区别。
操作系统用“进程” 来描述系统中各并发活动进程（process）又叫做任务（task）进程是程序的一次执行过程进程。
组成：进程是由程序、数据和进程控制块三个部分组成。
特性：
（1）动态性。进程是程序的一次执行过程，是临时的，有生命期的。
（2）独立性。进程是系统进行资源分配和调度的一个独立单位。
（3）并发性。多个进程可在处理机上交替执行。
（4）结构性。系统为每个进程建立一个进程控制块。
进程和程序的区别：
（1）进程是动态的，程序是静态的。程序是有序代码的集合，进程是程序的执行，没有程序就没有进程。通常，进程不可以在计算机之间迁移，而程序可以复制。
（2）进程是暂时的，程序是永久的。
（3）进程包括程序、数据和进程控制块。
（4）通过多次执行，一个程序可对应多个进程；通过调用关系，一个进程可包括多个程序。进程可创建其他进程，而程序不能形成新的程序。

	进程并发执行的特点：
	失去了封闭性和可再现性，
	以资源共享为基础，并发执行的程序之间产生了制约关系，
	程序与CPU执行的活动不在一一对应。（比如编译程序）
3	进程控制块的作用是什么?它主要包括哪几部分内容?
也叫进程描述符，是为了描述进程的运行变化情况，操作系统为每个进程定义了一个数据结构，它是进程存在的唯一标识。它包含了进程的描述（状态、调度、资源信息）信息和管理控制信息。具体包括：
1.	进程标识数：用于唯一地标识一个进程，通常是一个整数。
外部标识符，由用户使用。如：send进程、print进程等。
2.	进程的状态以及调度、存储器管理信息：是调度进程所必需的信息，包括进程状态、优先级、程序在主存地址、在外存的地址等。
3.	进程使用的资源信息：分配给进程的I/O设备、正在打开的文件等。
4.	CPU现场保护区：保存进程运行的现场信息。包括：程序计数器(PC)、程序状态字、通用寄存器、堆栈指针等。
5.	记帐信息：包括使用CPU时间量、帐号等。 
6.	进程之间的家族关系：类UNIX系统，进程之间存在着家族关系，父/子进程。Windows 进程之间不具有父子关系。
7.	进程的链接指针：链接相同状态的进程。
4	进程的基本状态，试举出使进程状态发生变化的事件并描绘它的状态转换图。
进程的三个基本状态：
（1）运行态(running)：进程正在CPU上运行。单CPU系统
一次只有一个运行进程；多CPU系统可能有多个运行进程。  
(2)阻塞态(blocked)：又称等待态。当进程因等待某个条件发生而不能运行时所处的状态。等待I/O完成，等待一个消息。
(3)就绪态(ready)：已获得除CPU之外的全部资源，只要再获得CPU，就可执行。
(4) 创建态：刚刚建立，未进就绪队列。
(5) 终止态：已正常结束或故障中断，但尚未撤消。暂留在系统中，方便其它进程去收集该进程的有关信息。
进程的组织：
(1)	线性表
(2)	链接表：相同状态的PCB组成一个队列，也可以处于就绪态的进程可按照某种策略排成多个就绪队列，根据阻塞的原因不同组织成多个阻塞队列。
5	什么是原语?什么是进程控制？
原语是由若干多机器指令构成的完成某种特定功能的一段程序，具有不可分割性，即原语的执行必须是连续的，在执行过程中不允许被中断。
进程控制：是指系统使用一些具有特定功能的程序段来创建、撤消进程，以及完成进程各状态之间的转换。进程控制是由操作系统内核实现的。是属于原语一级的操作，不能被中断。
原语类型：
(1)	创建原语 fork（）、CreateProcess()
(2)	撤销原语 exit()\ExitProcess()
(3)	阻塞原语 中断CPU Unix阻塞原语Sleep（）、Pause（）、Wait()、Kill（）
(4)	唤醒原语Wakeup()
(5)	挂起原语（6）解挂原语 静止状态变为活动状态，被解挂的进程变为活动就绪时，立即转进程调度
6	进程调度的功能、方式、时机、算法。作业调度，交换调度。作业的周转时间和作业的带权周转时间?
作业调度：高级调度。多道批处理系统。多个用户作业以成批的形式提交到外存，形成后备作业队列。被作业调度选中进内存，就处于运行态。
交换调度：将处于主存就绪或者主存阻塞等不具备运行条件的进程换出到外存交换区
进程调度：低级调度。进程调度就是为进程分配处理机，也叫处理机调度
功能：
(1) 记录进程执行状况。管理进程控制块，将进程的状态变化及资源需求情况及时地记录到PCB中。
(2) 选择就绪进程占有CPU
(3) 进程上下文的切换。将正在执行进程的上下文保存在该进程的PCB中，将刚选中进程的运行现场恢复起来，以便执行。
	进程上下文：
（1）	用户级上下文（进程的程序、数据、用户栈），
（2）	寄存器级上下文（CPU的现场信息），
（3）	系统级上下文（进程PCB和核心站）
栈：记录进程的执行历程，存放有关输入参数、局部变量、过程调用返回地址
进程调度方式：
① 非抢先方式(非剥夺方式)  某一进程占用CPU,直到运行完或不能运行为止，其间不被剥夺。用在批处理系统。主要优点：简单、系统开销小。
② 抢先方式(剥夺方式) 允许调度程序基于某种策略（优先级、时间片等）剥夺现行进程的CPU给其它进程。用在分时系统、实时系统。
进程调度的时机：
（1）现行进程完成或错误终止；
（2）提出I/O请求，等待I/O完成时；
（3）在分时系统，按照时间片轮转，分给进程的时间片用完时；
（4）优先级调度，有更高优先级进程就绪；
（5）进程执行了某种原语操作，如阻塞原语和唤醒原语，都可能引起进程调度。
处理机调度算法：
作业调度（1-3）：高级调度。多道批处理系统。多个用户作业以成批的形式提交到外存，形成后备作业队列。被作业调度选中进内存，就处于运行态。
（1）先来先服务(FCFS)：简单，节省机器时间。缺点：容易被大作业垄断，使得平均周转时间延长。
（2）最短作业优先(SJF)：选取运行时间最短的作业运行。对短作业有利，作业的平均周转时间最佳。缺点：若系统不断进入短作业，长作业就没有机会运行，出现饥饿现象。
（3）响应比高者优先(HRN)：Rp =(作业等待时间+作业估计运行时间)/作业估计运行时间 =1+作业等待时间/作业估计运行时间
 特点：结合了先来先服务、短作业优先的方法。通常情况下优先运行短作业然后等待时间足够长的长作业也会被运行。
交换调度（4-6）：中级调度。将主存就绪或主存阻塞等暂不具备运行条件的进程换出到外存交换区；或将外存交换区中的已具备运行条件的进程换入主存。交换调度可以控制进程对主存的使用。
（4）优先级调度法：将CPU分配给就绪队列中优先级最高的进程
（5）轮转法(RR)：用在分时系统，轮流调度所有就绪进程。
（6）多级反馈队列轮转法：系统设置多个就绪队列。
批处理系统：增加系统吞吐量和提高系统资源的利用率; 
实时系统：保证对随机发生的外部事件做出实时响应。
分时系统：保证每个分时用户能容忍的响应时间。
7	线程的定义，线程与进程的比较。系统对线程的支持（用户及线程、核心级线程、两级组合）。
	线程(thread)：是进程内的一个可执行实体，是处理机调度的基本单位，以进程为单位分配资源，以线程为单位调度执行。
比较：
（1）拥有的资源
进程拥有一个独立的地址空间，用来存放若干代码段和数据段。若干打开文件，以及至少一个线程。
一个进程内的多线程共享该进程的所有资源，线程自己拥有很少资源。
（2）调度
进程调度需进行进程上下文的切换，开销大。
同一进程内的线程切换，仅把线程拥有的一小部分资源变换了即可，效率高。同一进程内的线程切换比进程切换快得多。但是，在由一个进程的线程向另一个进程的线程切换时，会引起进程上下文的切换。
（3）并发性
 引入线程后，使得系统个的并发执行程度更高。 进程之间、进程内的多线程之间可并发执行。
（4）安全性
 同一进程的多线程共享进程的所有资源，一个线程可以改变另一个线程的数据，共享方便，但是和多线程比较，多进程实现，		安全性好。

系统对线程的支持
1）	用户级线程（用户调用用户态运行的线程库完成，一个线程阻塞，进程也阻塞，多线程对应核心级一个进程）			运行时系统（Run-time system）是一个管理线程的过程集合，包括：thread_create、thread_exit、thread_wait。
2）	核心级线程（线程的管理工作由内核完成，用用程序通过系统调用来创建或者撤销线程，个线程的阻塞，不影响其他线程的执行，用户态的一个线程对应核心态的一个线程或者进程）
3）	两级组合（多个用户级线程，对应等量或者少量的核心级线程）
4）	线程创建：clone（） CreateThread（）
